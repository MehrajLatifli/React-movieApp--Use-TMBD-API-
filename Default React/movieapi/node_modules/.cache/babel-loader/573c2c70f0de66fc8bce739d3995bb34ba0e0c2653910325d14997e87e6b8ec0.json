{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const STATUSES = Object.freeze({\n  IDLE: \"idle\",\n  ERROR: \"error\",\n  LOADING: \"loading\"\n});\nexport const fetchToprated = createAsyncThunk(\"toprateds/fetch\", async _ref => {\n  let {\n    MoviesorTv\n  } = _ref;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: \"bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MThiZjAxNGZjNzc4ZDk5MTdmYzRiOTAxOTFmODAyMSIsInN1YiI6IjYwOTBjMzM5ZjZmZDE4MDAyYTAwOGY3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L8yuJmX3xWQi-FTdIVHiE6hZpJym2eKj5TfEqr_TsEY\"\n    }\n  };\n  const totalPages = 2;\n  const results = [];\n  for (let page = 1; page <= totalPages; page++) {\n    const res = await fetch(`https://api.themoviedb.org/3/${MoviesorTv}/top_rated?page=${page}`, options);\n    const data = await res.json();\n    results.push(...data.results);\n  }\n  const filteredMovies = results.filter(movie => movie.vote_average >= 6);\n  return filteredMovies;\n});\nconst topratedSlice = createSlice({\n  name: \"toprated\",\n  initialState: {\n    data: [],\n    status: STATUSES.IDLE\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchToprated.pending, (state, action) => {\n      state.status = STATUSES.LOADING;\n    }).addCase(fetchToprated.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = STATUSES.IDLE;\n    }).addCase(fetchToprated.rejected, (state, action) => {\n      state.status = STATUSES.ERROR;\n    });\n  }\n});\nexport default topratedSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","STATUSES","Object","freeze","IDLE","ERROR","LOADING","fetchToprated","_ref","MoviesorTv","options","method","headers","accept","Authorization","totalPages","results","page","res","fetch","data","json","push","filteredMovies","filter","movie","vote_average","topratedSlice","name","initialState","status","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["E:/React/Movie API/movieapi/Default React/movieapi/src/Store/topratedSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const STATUSES = Object.freeze({\n  IDLE: \"idle\",\n  ERROR: \"error\",\n  LOADING: \"loading\"\n});\n\nexport const fetchToprated = createAsyncThunk(\n  \"toprateds/fetch\",\n  async ({ MoviesorTv }) => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MThiZjAxNGZjNzc4ZDk5MTdmYzRiOTAxOTFmODAyMSIsInN1YiI6IjYwOTBjMzM5ZjZmZDE4MDAyYTAwOGY3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L8yuJmX3xWQi-FTdIVHiE6hZpJym2eKj5TfEqr_TsEY\",\n      },\n    };\n\n    const totalPages = 2;\n\n    const results = [];\n    for (let page = 1; page <= totalPages; page++) {\n      const res = await fetch(\n        `https://api.themoviedb.org/3/${MoviesorTv}/top_rated?page=${page}`,\n        options\n      );\n      const data = await res.json();\n\n      results.push(...data.results);\n    }\n\n    const filteredMovies = results.filter((movie) => movie.vote_average >= 6);\n\n    return filteredMovies;\n  }\n);\n\nconst topratedSlice = createSlice({\n  name: \"toprated\",\n  initialState: {\n    data: [],\n    status: STATUSES.IDLE,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchToprated.pending, (state, action) => {\n        state.status = STATUSES.LOADING;\n      })\n      .addCase(fetchToprated.fulfilled, (state, action) => {\n        state.data = action.payload;\n        state.status = STATUSES.IDLE;\n      })\n      .addCase(fetchToprated.rejected, (state, action) => {\n        state.status = STATUSES.ERROR;\n      });\n  },\n});\n\nexport default topratedSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC;EACpCC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGR,gBAAgB,CAC3C,iBAAiB,EACjB,MAAAS,IAAA,IAA0B;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EACnB,MAAME,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EACX;IACJ;EACF,CAAC;EAED,MAAMC,UAAU,GAAG,CAAC;EAEpB,MAAMC,OAAO,GAAG,EAAE;EAClB,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,IAAIF,UAAU,EAAEE,IAAI,EAAE,EAAE;IAC7C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,gCAA+BV,UAAW,mBAAkBQ,IAAK,EAAC,EACnEP,OACF,CAAC;IACD,MAAMU,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAE7BL,OAAO,CAACM,IAAI,CAAC,GAAGF,IAAI,CAACJ,OAAO,CAAC;EAC/B;EAEA,MAAMO,cAAc,GAAGP,OAAO,CAACQ,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,YAAY,IAAI,CAAC,CAAC;EAEzE,OAAOH,cAAc;AACvB,CACF,CAAC;AAED,MAAMI,aAAa,GAAG3B,WAAW,CAAC;EAChC4B,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZT,IAAI,EAAE,EAAE;IACRU,MAAM,EAAE7B,QAAQ,CAACG;EACnB,CAAC;EACD2B,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC1B,aAAa,CAAC2B,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACL,MAAM,GAAG7B,QAAQ,CAACK,OAAO;IACjC,CAAC,CAAC,CACD2B,OAAO,CAAC1B,aAAa,CAAC8B,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACf,IAAI,GAAGgB,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACL,MAAM,GAAG7B,QAAQ,CAACG,IAAI;IAC9B,CAAC,CAAC,CACD6B,OAAO,CAAC1B,aAAa,CAACgC,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAClDD,KAAK,CAACL,MAAM,GAAG7B,QAAQ,CAACI,KAAK;IAC/B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAesB,aAAa,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}