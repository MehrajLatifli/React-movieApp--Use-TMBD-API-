{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const STATUSES = Object.freeze({\n  IDLE: \"idle\",\n  ERROR: \"error\",\n  LOADING: \"loading\"\n});\nexport const fetchFilter = createAsyncThunk(\"populars/fetch\", async _ref => {\n  let {\n    MoviesorTv,\n    page,\n    primary_release_year,\n    sorts_by,\n    with_genres,\n    vote_average_lte\n  } = _ref;\n  const options = {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      Authorization: \"bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MThiZjAxNGZjNzc4ZDk5MTdmYzRiOTAxOTFmODAyMSIsInN1YiI6IjYwOTBjMzM5ZjZmZDE4MDAyYTAwOGY3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L8yuJmX3xWQi-FTdIVHiE6hZpJym2eKj5TfEqr_TsEY\"\n    }\n  };\n  const totalPages = page;\n  const results = [];\n  for (let page = 1; page <= totalPages; page++) {\n    if (MoviesorTv === \"movie\") {\n      const res = await fetch(`https://api.themoviedb.org/3/discover/${MoviesorTv}?page=${page}&primary_release_year=${primary_release_year}&sort_by=${sorts_by}&vote_average.lte=${vote_average_lte}&with_genres=${with_genres}`, options);\n      const data = await res.json();\n      results.push(...data.results);\n    }\n    if (MoviesorTv === \"tv\") {\n      const res = await fetch(`https://api.themoviedb.org/3/discover/${MoviesorTv}?first_air_date_year=${primary_release_year}&include_adult=false&include_null_first_air_dates=false&language=en-US&page=${page}&sort_by=${sorts_by}&vote_average.lte=${vote_average_lte}&with_genres=${with_genres}`, options);\n      const data = await res.json();\n      results.push(...data.results);\n    }\n  }\n  return results;\n});\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState: {\n    data: [],\n    status: STATUSES.IDLE\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchFilter.pending, (state, action) => {\n      state.status = STATUSES.LOADING;\n    }).addCase(fetchFilter.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = STATUSES.IDLE;\n    }).addCase(fetchFilter.rejected, (state, action) => {\n      state.status = STATUSES.ERROR;\n    });\n  }\n});\nexport default filterSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","STATUSES","Object","freeze","IDLE","ERROR","LOADING","fetchFilter","_ref","MoviesorTv","page","primary_release_year","sorts_by","with_genres","vote_average_lte","options","method","headers","accept","Authorization","totalPages","results","res","fetch","data","json","push","filterSlice","name","initialState","status","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"sources":["E:/React/Movie API/movieapi/Default React/movieapi/src/Store/filterSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const STATUSES = Object.freeze({\n  IDLE: \"idle\",\n  ERROR: \"error\",\n  LOADING: \"loading\"\n});\n\nexport const fetchFilter = createAsyncThunk(\n  \"populars/fetch\",\n  async ({ MoviesorTv, page, primary_release_year, sorts_by, with_genres, vote_average_lte }) => {\n    const options = {\n      method: \"GET\",\n      headers: {\n        accept: \"application/json\",\n        Authorization:\n          \"bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2MThiZjAxNGZjNzc4ZDk5MTdmYzRiOTAxOTFmODAyMSIsInN1YiI6IjYwOTBjMzM5ZjZmZDE4MDAyYTAwOGY3MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.L8yuJmX3xWQi-FTdIVHiE6hZpJym2eKj5TfEqr_TsEY\",\n      },\n    };\n\n    const totalPages = page;\n\n    const results = [];\n    for (let page = 1; page <= totalPages; page++) {\n\n      if (MoviesorTv === \"movie\") {\n        const res = await fetch(`https://api.themoviedb.org/3/discover/${MoviesorTv}?page=${page}&primary_release_year=${primary_release_year}&sort_by=${sorts_by}&vote_average.lte=${vote_average_lte}&with_genres=${with_genres}`, options);\n        const data = await res.json();\n        results.push(...data.results);\n      }\n\n      if (MoviesorTv === \"tv\") {\n        const res = await fetch(`https://api.themoviedb.org/3/discover/${MoviesorTv}?first_air_date_year=${primary_release_year}&include_adult=false&include_null_first_air_dates=false&language=en-US&page=${page}&sort_by=${sorts_by}&vote_average.lte=${vote_average_lte}&with_genres=${with_genres}`, options);\n        const data = await res.json();\n\n        results.push(...data.results);\n      }\n\n    }\n    return results;\n  }\n\n\n\n  \n);\n\nconst filterSlice = createSlice({\n  name: \"filter\",\n  initialState: {\n    data: [],\n    status: STATUSES.IDLE,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchFilter.pending, (state, action) => {\n        state.status = STATUSES.LOADING;\n      })\n      .addCase(fetchFilter.fulfilled, (state, action) => {\n        state.data = action.payload;\n        state.status = STATUSES.IDLE;\n      })\n      .addCase(fetchFilter.rejected, (state, action) => {\n        state.status = STATUSES.ERROR;\n      });\n  },\n});\n\nexport default filterSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC;EACpCC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,WAAW,GAAGR,gBAAgB,CACzC,gBAAgB,EAChB,MAAAS,IAAA,IAA+F;EAAA,IAAxF;IAAEC,UAAU;IAAEC,IAAI;IAAEC,oBAAoB;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAiB,CAAC,GAAAN,IAAA;EACxF,MAAMO,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EACX;IACJ;EACF,CAAC;EAED,MAAMC,UAAU,GAAGV,IAAI;EAEvB,MAAMW,OAAO,GAAG,EAAE;EAClB,KAAK,IAAIX,IAAI,GAAG,CAAC,EAAEA,IAAI,IAAIU,UAAU,EAAEV,IAAI,EAAE,EAAE;IAE7C,IAAID,UAAU,KAAK,OAAO,EAAE;MAC1B,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAAE,yCAAwCd,UAAW,SAAQC,IAAK,yBAAwBC,oBAAqB,YAAWC,QAAS,qBAAoBE,gBAAiB,gBAAeD,WAAY,EAAC,EAAEE,OAAO,CAAC;MACrO,MAAMS,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BJ,OAAO,CAACK,IAAI,CAAC,GAAGF,IAAI,CAACH,OAAO,CAAC;IAC/B;IAEA,IAAIZ,UAAU,KAAK,IAAI,EAAE;MACvB,MAAMa,GAAG,GAAG,MAAMC,KAAK,CAAE,yCAAwCd,UAAW,wBAAuBE,oBAAqB,+EAA8ED,IAAK,YAAWE,QAAS,qBAAoBE,gBAAiB,gBAAeD,WAAY,EAAC,EAAEE,OAAO,CAAC;MAC1S,MAAMS,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAE7BJ,OAAO,CAACK,IAAI,CAAC,GAAGF,IAAI,CAACH,OAAO,CAAC;IAC/B;EAEF;EACA,OAAOA,OAAO;AAChB,CAKF,CAAC;AAED,MAAMM,WAAW,GAAG3B,WAAW,CAAC;EAC9B4B,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZL,IAAI,EAAE,EAAE;IACRM,MAAM,EAAE7B,QAAQ,CAACG;EACnB,CAAC;EACD2B,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC1B,WAAW,CAAC2B,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACL,MAAM,GAAG7B,QAAQ,CAACK,OAAO;IACjC,CAAC,CAAC,CACD2B,OAAO,CAAC1B,WAAW,CAAC8B,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACX,IAAI,GAAGY,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACL,MAAM,GAAG7B,QAAQ,CAACG,IAAI;IAC9B,CAAC,CAAC,CACD6B,OAAO,CAAC1B,WAAW,CAACgC,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACL,MAAM,GAAG7B,QAAQ,CAACI,KAAK;IAC/B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAesB,WAAW,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}